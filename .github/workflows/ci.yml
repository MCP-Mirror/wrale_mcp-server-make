name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]
        install-method: ["uv", "uvx"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH

    - name: Install dependencies with uv
      if: matrix.install-method == 'uv'
      run: |
        uv venv
        source .venv/bin/activate
        uv pip install -e ".[dev]"
        
    - name: Install globally with uvx (system-wide)
      if: matrix.install-method == 'uvx'
      run: |
        uvx install --system -e ".[dev]"

    - name: Run checks and tests
      run: |
        python -m ruff check .
        python -m ruff format . --check
        python -m mypy src/mcp_server_make
        python -m pytest tests
      env:
        PYTHONPATH: ${{ github.workspace }}/src

  verify-uvx:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    
    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH

    - name: Build package
      run: |
        uv pip install build
        python -m build

    - name: Test uvx installation
      run: |
        uvx install --system dist/*.whl
        # Verify the tool runs
        mcp-server-make --help